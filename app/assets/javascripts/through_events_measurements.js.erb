$(document).ready(function() {

  $.fn.dataTable.ext.buttons.through_events_measurement_selected_destroy = {
    text: '<span class="text-danger fa fa-trash"></span>',
    titleAttr: 'Usuń zaznaczone wiersze',
    className: 'btn btn-default',
    init: function ( dt, node, config ) {
      var that = this;
      dt.on( 'select.dt.DT deselect.dt.DT', function () {
        that.enable( dt.rows( { selected: true } ).any() );
      });
      this.disable();
    },
    action: function ( e, dt, button, config ) {
      if (confirm('Czy na pewno chcesz usunąć plik(-i)?')) {
        $.map(oThroughEventsMeasurementableMeasurementsTable.rows( { selected: true } ).data(), function (item) {

          $.ajax({
            url: '/measurements/' + item.id,
            type: 'DELETE',
            async: true,
            success: function (response) {
              oThroughEventsMeasurementableMeasurementsTable.draw();
              toastr['success']('"' + item.attached_file + '" został trwale usunięty');
            },
            error: function (xhr, ajaxOptions, thrownError) {
              console.log(xhr);
              if (xhr.status == 401) {
                window.location.reload();
              } else {
                getErrorMessage(xhr, thrownError);
              }
            }
          });

        });
      }
    }  
  };

  var oThroughEventsMeasurementableMeasurementsTable = $('#through-events-measurementable-measurements').DataTable({
    dom: 'lBfrtip',
    buttons: [
      'through_events_measurement_selected_destroy'
    ],
    select: {
      style: 'multi'
    },
    responsive: true,
    processing: true,
    serverSide: true,
    deferRender: true,
    searchDelay: 500,
    ajax: { 
      url: $('#through-events-measurementable-measurements').data('source'),
      type: "GET",
      error: function (jqXHR, exception) {
        console.log(jqXHR);
        if (jqXHR.status == 401) {
          window.location.reload();
        } else {
          getErrorMessage(jqXHR, exception);
        }
      }
    },
    pagingType: "full_numbers",
    lengthMenu: [[10, 15, 25, 50, 100, -1], [10, 15, 25, 50, 100, "Wszystkie"]],
    iDisplayLength: -1,
    columns: [
      { "data": "id",
        "visible": false,
        "searchable": false,
        "sortable": false }, 
      { "data": "attached_file" }, 
      { "data": "measurementable" },
      { "data": "note" }, 
      { "data": "user" },
      { "data": "updated_at" },
      { "data": "file_size",
        "searchable": false,
        "sortable": false },
      { "data": "action",
        "searchable": false,
        "sortable": false }
    ],
    preDrawCallback: function( settings ) {
      // jezeli panel nie jest widoczny, to przerwij ładowanie danych
      if ( $( "#tab_through_events_measurements" ).is( ":hidden" ) ) {
        return false;
      }
    },
    order: [[ 5, "desc" ]],
    language: {
      url: '<%= asset_path("pl.json.erb") %>'
    }
  });


  oThroughEventsMeasurementableMeasurementsTable
  .on( 'draw', function () {
    oThroughEventsMeasurementableMeasurementsTable.rows().deselect();
  });


  // jezeli nastepuje wyswietlenie tab, to zaladuj dane
  $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
    var target = $(e.target).attr("href") // activated tab
    if (target == '#through_events_measurements') {
      oThroughEventsMeasurementableMeasurementsTable.draw();
    };
  });


  $('#through-events-measurementable-measurements tbody').on( 'click', 'button-as-link', function () {
    if (confirm('Czy na pewno chcesz usunać plik?')) {
      $.ajax({
        url: $(this).attr('ajax-path'),
        type: $(this).attr('ajax-method'),
        async: true,
        success: function (response) {
          oThroughEventsMeasurementableMeasurementsTable.draw();
          toastr['success']('plik został trwale usunięty');
        },
        error: function (xhr, ajaxOptions, thrownError) {
          console.log(xhr);
          if (xhr.status == 401) {
            window.location.reload();
          } else {
            getErrorMessage(xhr, thrownError);
          }
        }
      });
    };
  });

  
});
