<div id="tab_attachments">
  <fieldset class="my-fieldset">
    <legend class="my-fieldset colored-title"><%= subtitle %>&nbsp;&nbsp;-&nbsp;&nbsp;<%= attachment_index_legend %></legend>

    <div class="row">

      <div id="id_attachment_breadcrumb" class="col-sm-9"></div>

      <div class="col-sm-3">
        <%= form_for [attachmenable, Attachment.new], url: polymorphic_url([attachmenable, Attachment.new], action: "create_folder"), remote: true, html: { id: "new_attachment_folder", class: "form form-inline" } do |ff| %>
          <div class="row">
            <div class="form-group col-sm-12">
              <%#= ff.label :name_if_folder, class: 'control-label' %>
              <%= ff.text_field :name_if_folder, class: 'form-control input-sm' %>

              <%= ff.hidden_field :parent_id, id: "attachment_parent_id_for_folder", value: nil %>
              <%#= f.submit nil, :class => 'btn btn-sm btn-success' %>

              <%= ff.button(:class => "btn btn-sm btn-success", disabled: false, :id => "for_folder_subbimt_btn_submit") do %>
                <span><%= fa_icon("folder-plus", text: t("pages.attachment.attachments_tab.folder_submit")) %></span>
              <% end %>

            </div>
          </div>
        <% end %>
      </div>

      <div class="col-sm-12">
        <table id="attachmenable-attachments" class="hover cell-border compact" width="100%" 
          data-source="<%= datatables_index_attachments_path(attachmenable_type: attachmenable.class.to_s, attachmenable_id: attachmenable.id.to_s, format: :json) %>"
          data-move_statement_access="<%= move_statement_access ||= false %>"
          data-move_correspondence_access="<%= move_correspondence_access ||= false %>"
          data-move_opinion_access="<%= move_opinion_access ||= false %>"
          data-move_protocol_access="<%= move_protocol_access ||= false %>"
          data-move_inspection_protocol_access="<%= move_inspection_protocol_access ||= false %>"
          data-move_measurement_access="<%= move_measurement_access ||= false %>"
          data-move_documentation_access="<%= move_documentation_access ||= false %>"
          data-move_info_access="<%= move_info_access ||= false %>"
          data-move_photo_access="<%= move_photo_access ||= false %>">
          <thead>
            <tr>
              <th> </th>
              <th> ID </th>
              <th><%= Attachment.human_attribute_name(:name) %></th>
              <th><%= Attachment.human_attribute_name(:note) %></th>
              <th><%= Attachment.human_attribute_name(:user_id) %></th>
              <th><%= Attachment.human_attribute_name(:updated_at) %></th>
              <th><%= Attachment.human_attribute_name(:file_size) %></th>
              <th></th>
            </tr>
          </thead>
          <tbody>                    
            <!--data from JSON -->
          </tbody>
        </table>
      </div> <!--/col-sm-12 -->


      <div class="col-sm-12">
        <hr>
        <%= form_for [attachmenable, Attachment.new] do |f| %>
          <div class="row">
            <div class="form-group col-sm-12">
              <%= f.label :attached_file, class: 'control-label' %><small>&nbsp;&nbsp;(<%= t('help_block_text.fileuploaddragdrop') %>)</small><br>
              <%= f.file_field :attached_file, multiple: true, name: "attachment[attached_file]", class: 'form-control input input-file-field' %>
            </div>
          </div>
          <%= f.hidden_field :parent_id, id: "attachment_parent_id", value: nil %>
        <% end %>
      </div> <!-- /col-sm-12 -->

      <div class="col-sm-12">
        <script id="attachment-template-upload" type="text/x-tmpl">

          <div class="upload" id="{%=o.name%}_id_file">
            <div>{%=o.name%}</div> 
            <div class="progress">
              <div class="progress-bar progress-bar-success" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>
            </div>
          </div>

        </script>
      </div> <!-- /col-sm-12 -->


    </div>

  </fieldset>
</div>

<script type="text/javascript">

  function linkToAttachmentBreadcrumb(breadcrumb_ancestry_json={parent_id: null, ancestry_path: [], ancestor_ids: []}){
    // Store the latest `attachment_breadcrumb_path` object for next reload
    localStorage.setItem( 'ls_attachment_breadcrumb', JSON.stringify(breadcrumb_ancestry_json) );
    // redraw for new ajax data: d.attachment_parent_id 
    $('#attachmenable-attachments').DataTable().draw();
    buildAttachmentBreadcrumb("id_attachment_breadcrumb", 
                              ["attachment_parent_id_for_folder","attachment_parent_id"],
                              "linkToAttachmentBreadcrumb", 
                              breadcrumb_ancestry_json);
  };    

  $(document).ready(function() {
    buildAttachmentBreadcrumb("id_attachment_breadcrumb", 
                              ["attachment_parent_id_for_folder","attachment_parent_id"],
                              "linkToAttachmentBreadcrumb", 
                              breadcrumb_ancestry_json={parent_id: null, ancestry_path: [], ancestor_ids: []});
  });

</script>